(function() {var implementors = {};
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"crossbeam_epoch/trait.Pointable.html\" title=\"trait crossbeam_epoch::Pointable\">Pointable</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;","synthetic":false,"types":["crossbeam_epoch::atomic::Atomic"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"crossbeam_epoch/trait.Pointable.html\" title=\"trait crossbeam_epoch::Pointable\">Pointable</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'_, T&gt;","synthetic":false,"types":["crossbeam_epoch::atomic::Shared"]}];
implementors["env_logger"] = [{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"env_logger/fmt/struct.StyledValue.html\" title=\"struct env_logger::fmt::StyledValue\">StyledValue</a>&lt;'a, T&gt;","synthetic":false,"types":["env_logger::fmt::StyledValue"]}];
implementors["lmdb_zero"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"lmdb_zero/traits/trait.LmdbRawIfUnaligned.html\" title=\"trait lmdb_zero::traits::LmdbRawIfUnaligned\">LmdbRawIfUnaligned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"lmdb_zero/struct.Unaligned.html\" title=\"struct lmdb_zero::Unaligned\">Unaligned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a>,&nbsp;</span>","synthetic":false,"types":["lmdb_zero::unaligned::Unaligned"]}];
implementors["supercow"] = [{"text":"impl&lt;'a, OWNED, BORROWED:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, SHARED, STORAGE, PTR&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"supercow/struct.Supercow.html\" title=\"struct supercow::Supercow\">Supercow</a>&lt;'a, OWNED, BORROWED, SHARED, STORAGE, PTR&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BORROWED: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.pointer.html\">*const BORROWED</a>: <a class=\"trait\" href=\"supercow/ext/trait.PointerFirstRef.html\" title=\"trait supercow::ext::PointerFirstRef\">PointerFirstRef</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;STORAGE: <a class=\"trait\" href=\"supercow/ext/trait.OwnedStorage.html\" title=\"trait supercow::ext::OwnedStorage\">OwnedStorage</a>&lt;OWNED, SHARED&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PTR: <a class=\"trait\" href=\"supercow/ext/trait.PtrWrite.html\" title=\"trait supercow::ext::PtrWrite\">PtrWrite</a>&lt;BORROWED&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;BORROWED: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;PTR: <a class=\"trait\" href=\"supercow/ext/trait.PtrRead.html\" title=\"trait supercow::ext::PtrRead\">PtrRead</a>&lt;BORROWED&gt;,&nbsp;</span>","synthetic":false,"types":["supercow::Supercow"]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"tinyvec/trait.Array.html\" title=\"trait tinyvec::Array\">Array</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"tinyvec/struct.ArrayVec.html\" title=\"struct tinyvec::ArrayVec\">ArrayVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::<a class=\"type\" href=\"tinyvec/trait.Array.html#associatedtype.Item\" title=\"type tinyvec::Array::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a>,&nbsp;</span>","synthetic":false,"types":["tinyvec::arrayvec::ArrayVec"]},{"text":"impl&lt;'s, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"tinyvec/struct.SliceVec.html\" title=\"struct tinyvec::SliceVec\">SliceVec</a>&lt;'s, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a>,&nbsp;</span>","synthetic":false,"types":["tinyvec::slicevec::SliceVec"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"tinyvec/trait.Array.html\" title=\"trait tinyvec::Array\">Array</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"enum\" href=\"tinyvec/enum.TinyVec.html\" title=\"enum tinyvec::TinyVec\">TinyVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::<a class=\"type\" href=\"tinyvec/trait.Array.html#associatedtype.Item\" title=\"type tinyvec::Array::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a>,&nbsp;</span>","synthetic":false,"types":["tinyvec::tinyvec::TinyVec"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()